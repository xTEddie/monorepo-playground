name: Foo Release CI

on: 
  push:
    branches:
      - dev
    paths:
      - 'packages/foo/**'

jobs: 
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Validate
        run: |
          pwd -L
          ls
      - name: Checking out for ${{ github.ref }}
        uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.X
      - name: Update package version
        working-directory: packages/foo
        run: npx version-from-git --no-git-tag-version
        if: ${{ startsWith(github.ref, 'refs/heads/') }}
      - name: Read package.json
        id: read-package-json
        working-directory: packages/foo
        run: |
          echo "::set-output name=name::$(cat package.json | jq -r '.name')"
          echo "::set-output name=version::$(cat package.json | jq -r '.version')"
      - name: Install packages
        working-directory: packages/foo
        run: npm install
      # - name: Build NPM packages
      #   run: |
      #     npm run build:tsc
      - name: Validate
        working-directory: packages/foo
        run: |
          pwd -L
          ls      
      - name: Npm packaging
        working-directory: packages/foo
        run: npm pack
      - name: Move package tarball to root
        working-directory: packages/foo
        run: |
          pwd -L
          ls
          mv *.tgz ../../
      - name: Validate
        run: |
          pwd -L
          ls          
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: npm-tarball
          path: '*.tgz'
  
  publish:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/heads/') || startsWith(github.ref, 'refs/tags/') }}
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: npm-tarball
      - name: Validate
        run: |
          pwd -L
          ls
      - name: Read package.json
        id: read-package-json
        run: |
          echo "::set-output name=name::$(tar xOf *.tgz package/package.json | jq -r '.name')"
          echo "::set-output name=version::$(tar xOf *.tgz package/package.json | jq -r '.version')"
          echo "::set-output name=tarball::$(ls *.tgz)"
          echo "::set-output name=date::$(date +%Y-%m-%d)"
      - name: Run npm publish ${{ steps.read-package-json.outputs.name }}@${{ steps.read-package-json.outputs.version }}
        run: |
          npm config set //registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}
          npm publish *.tgz --tag main --access public
          npm dist-tag add ${{ steps.read-package-json.outputs.name }}@${{ steps.read-package-json.outputs.version }} latest    